/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.erhannis.ivorydamagescripts;

/**
 *
 * @author erhannis
 */
public class MainFrame extends javax.swing.JFrame {
    public static final Attack PERFORMANCE = new Attack(new Roll(3), new Roll(3));
    public static final Attack FLANKING = new Attack(new Roll(2), Roll.ndn(8, new MinDie(4, 2), 0));
    public static final Attack HOLY_DAMAGE = new Attack(new Roll(0), new Roll(0, Die.D6, Die.D6));

    private static javax.swing.JTextPane logPanel;
    public static void log(String s) {
        System.out.print(s);
        logPanel.setText(logPanel.getText()+s);
    }
    public static void logln(String s) {
        System.out.println(s);
        logPanel.setText(logPanel.getText()+s+"\n");
    }
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        logPanel = this.jTextPane1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        btnBite = new javax.swing.JButton();
        cbFlanking = new javax.swing.JCheckBox();
        cbPerformance = new javax.swing.JCheckBox();
        cbHolyDamage = new javax.swing.JCheckBox();
        btnFullAttack = new javax.swing.JButton();
        btnFlyingFullAttack = new javax.swing.JButton();
        spinAC = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        spinToHitMod = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        spinToDamageMod = new javax.swing.JSpinner();
        btnWing = new javax.swing.JButton();
        btnTail = new javax.swing.JButton();
        btnClaw = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ivory Damage Scripts");

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        btnBite.setText("Bite");
        btnBite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBiteActionPerformed(evt);
            }
        });

        cbFlanking.setSelected(true);
        cbFlanking.setText("Flanking");

        cbPerformance.setSelected(true);
        cbPerformance.setText("Performance");

        cbHolyDamage.setSelected(true);
        cbHolyDamage.setText("Holy damage");

        btnFullAttack.setText("Full attack");
        btnFullAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFullAttackActionPerformed(evt);
            }
        });

        btnFlyingFullAttack.setText("Flying full attack");
        btnFlyingFullAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlyingFullAttackActionPerformed(evt);
            }
        });

        spinAC.setModel(new javax.swing.SpinnerNumberModel());

        jLabel1.setText("AC to beat");

        spinToHitMod.setModel(new javax.swing.SpinnerNumberModel());

        jLabel2.setText("+to hit");

        jLabel3.setText("+to damage");

        spinToDamageMod.setModel(new javax.swing.SpinnerNumberModel());

        btnWing.setText("Wing");
        btnWing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWingActionPerformed(evt);
            }
        });

        btnTail.setText("Tail");
        btnTail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTailActionPerformed(evt);
            }
        });

        btnClaw.setText("Claw");
        btnClaw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClawActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(spinAC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFullAttack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spinToHitMod, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spinToDamageMod, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addComponent(cbFlanking)
                            .addComponent(cbPerformance)
                            .addComponent(cbHolyDamage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 339, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBite)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClaw)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnWing)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTail))
                            .addComponent(btnFlyingFullAttack, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinToHitMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinToDamageMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPerformance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFlanking)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbHolyDamage))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFullAttack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFlyingFullAttack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnWing)
                            .addComponent(btnTail)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnClaw)
                                .addComponent(btnBite)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);

        jScrollPane1.setViewportView(jTextPane1);

        jSplitPane1.setRightComponent(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public CompoundAttack modify(CompoundAttack atk) {
        if (cbPerformance.isSelected()) {
            atk = atk.plus(PERFORMANCE);
        }
        if (cbHolyDamage.isSelected()) {
            atk = atk.plus(HOLY_DAMAGE);
        }
        if (cbFlanking.isSelected()) {
            atk = atk.plus(FLANKING);
        }
        atk = atk.plus(new Attack(new Modifier((Integer)spinToHitMod.getValue()), new Modifier((Integer)spinToDamageMod.getValue())));
        return atk;
    }
    
    public int doBite() {
        CompoundAttack ca = new CompoundAttack(new Roll(16, Die.D20), Roll.ndn(2, Die.D8, 8));
        ca = modify(ca);
        MainFrame.logln("Bite toHit:");
        int t = ca.rollToHit();
        MainFrame.logln(" total " + t);
        if (t >= ((Integer)spinAC.getValue())) {
            MainFrame.logln("Bite toDamage:");
            t = ca.rollToDamage();
            MainFrame.logln(" total " + t);
        } else {
            MainFrame.logln("Miss");
            t = 0;
        }
        MainFrame.logln("");
        return 0;
    }

    public int doClaw() {
        CompoundAttack ca = new CompoundAttack(new Roll(14, Die.D20), Roll.ndn(1, Die.D8, 3));
        ca = modify(ca);
        MainFrame.logln("Claw toHit:");
        int t = ca.rollToHit();
        MainFrame.logln(" total " + t);
        if (t >= ((Integer)spinAC.getValue())) {
            MainFrame.logln("Claw toDamage:");
            t = ca.rollToDamage();
            MainFrame.logln(" total " + t);
        } else {
            MainFrame.logln("Miss");
            t = 0;
        }
        MainFrame.logln("");
        return t;
    }

    public int doWing() {
        CompoundAttack ca = new CompoundAttack(new Roll(14, Die.D20), Roll.ndn(1, Die.D8, 3));
        ca = modify(ca);
        MainFrame.logln("Wing toHit:");
        int t = ca.rollToHit();
        MainFrame.logln(" total " + t);
        if (t >= ((Integer)spinAC.getValue())) {
            MainFrame.logln("Wing toDamage:");
            t = ca.rollToDamage();
            MainFrame.logln(" total " + t);
        } else {
            MainFrame.logln("Miss");
            t = 0;
        }
        MainFrame.logln("");
        return t;
    }
    
    public int doTail() {
        CompoundAttack ca = new CompoundAttack(new Roll(14, Die.D20), Roll.ndn(2, Die.D6, 8));
        ca = modify(ca);
        MainFrame.logln("Tail toHit:");
        int t = ca.rollToHit();
        MainFrame.logln(" total " + t);
        if (t >= ((Integer)spinAC.getValue())) {
            MainFrame.logln("Tail toDamage:");
            t = ca.rollToDamage();
            MainFrame.logln(" total " + t);
        } else {
            MainFrame.logln("Miss");
            t = 0;
        }
        MainFrame.logln("");
        return t;
    }

    private void btnBiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBiteActionPerformed
        jTextPane1.setText("");
        doBite();
        MainFrame.logln("----");
    }//GEN-LAST:event_btnBiteActionPerformed

    private void btnFullAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFullAttackActionPerformed
        jTextPane1.setText("");
        int t = 0;
        t += doBite();
        t += doClaw();
        t += doClaw();
        t += doWing();
        t += doWing();
        t += doTail();
        MainFrame.logln("");
        MainFrame.logln("total damage: " + t);
        MainFrame.logln("----");
    }//GEN-LAST:event_btnFullAttackActionPerformed

    private void btnFlyingFullAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlyingFullAttackActionPerformed
        jTextPane1.setText("");
        int t = 0;
        t += doBite();
        t += doClaw();
        t += doClaw();
        t += doTail();
        MainFrame.logln("");
        MainFrame.logln("total damage: " + t);
        MainFrame.logln("----");
    }//GEN-LAST:event_btnFlyingFullAttackActionPerformed

    private void btnWingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWingActionPerformed
        jTextPane1.setText("");
        doWing();
        MainFrame.logln("----");
    }//GEN-LAST:event_btnWingActionPerformed

    private void btnTailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTailActionPerformed
        jTextPane1.setText("");
        doTail();
        MainFrame.logln("----");
    }//GEN-LAST:event_btnTailActionPerformed

    private void btnClawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClawActionPerformed
        jTextPane1.setText("");
        doClaw();
        MainFrame.logln("----");
    }//GEN-LAST:event_btnClawActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBite;
    private javax.swing.JButton btnClaw;
    private javax.swing.JButton btnFlyingFullAttack;
    private javax.swing.JButton btnFullAttack;
    private javax.swing.JButton btnTail;
    private javax.swing.JButton btnWing;
    private javax.swing.JCheckBox cbFlanking;
    private javax.swing.JCheckBox cbHolyDamage;
    private javax.swing.JCheckBox cbPerformance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JSpinner spinAC;
    private javax.swing.JSpinner spinToDamageMod;
    private javax.swing.JSpinner spinToHitMod;
    // End of variables declaration//GEN-END:variables
}
